- name: "Create proxy_net if it does not exist"
  become: True
  docker_network:
    name: proxy_net

- include: create_volumes.yml
  become: True
  tags:
    - redmine_volumes_setup
    - redmine_setup

- include: setup.yml
  become: True
  tags: redmine_setup

- include: backup.yml
  become: True
  tags: redmine_all_backup

- name: "Create docker-compose folder"
  tags:
   - redmine_destroy
   - redmine_deploy
   - redmine_restore
  file:
    name: /tmp/{{ project_name }}
    state: directory

- name: "Write docker-compose"
  tags: 
    - redmine_destroy
    - redmine_deploy
    - redmine_restore
  template:
    src: docker-compose.j2
    dest: /tmp/{{ project_name }}/docker-compose.yml

- include: restore.yml
  become: True
  tags: redmine_all_restore

- name: "Allow docker containers to communicate with the outside"
  become: True
  tags:
   - redmine_deploy
   - redmine_restore
  command: iptables -t nat -A POSTROUTING -s 172.16.0.0/12 ! -d 172.16.0.0/12 -j MASQUERADE

- include: deploy.yml
  become: True
  tags:
    - redmine_deploy
    - redmine_restore

- name: "Mirror clone repositories"
  tags: redmine_repos
  become: True
  command: >
    docker exec {{project_name}}_redmine_1 bash -c "su redmine;
    git clone --mirror {{repo.value}} {{repo_path}}{{repo.key}}; crontab -l > mycron; echo '*/5 * * * * app cd {{repo_path}}{{repo.key}} && git fetch -q --all -p'
    >> mycron; crontab mycron; rm mycron;"
  with_dict: repositories

- include: destroy.yml
  become: True
  tags: redmine_destroy

- name: "Remove docker-compose folder"
  become: True
  tags:
    - redmine_deploy
    - redmine_destroy
    - redmine_restore
  file:
    name: /tmp/{{ project_name }}
    state: absent

- debug:
    msg: The deed is done.
  tags: redmine_destroy
